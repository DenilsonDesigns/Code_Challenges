POTENTIAL QUESTIONS:
    [] TELL ME ABOUT A TIME YOU HAD TO PERSUADE SOMEONE AT WORK
        - CAN TELL ABOUT REDUX DEVTOOLS THING (IS THAT ENOUGH BUSINESS VALUE?)
    [] TELL ME ABOUT A TIME YOU FAILED
        - FAILING TO DELIVER A FEATURE?
        - FELICETTE?
    [] SOMETHING YOU'RE PROUD OF THAT ISN'T ON YOUR RESUME

WHAT ARE POINTS THAT ARE CULTURALLY IMPORTANT TO COMPANY:
    [] 

REASONS YOU WANNA JOIN COMPANY:
    [] BIG SOFTWARE COMPANY
    [] GREATER SCALE THAN CURRENT COMPANY
    [] MORE INNOVATIVE UX THAN CURRENT COMPANY
    [] HEARD GREAT THINGS FROM EMPLOYEES OF CURRENT COMPANY


EXAMPLE QUESTIONS:
    [] TELL ME ABOUT A TIME YOU HAD A DISAGREEMENT WITH PRODUCT/DESIGN.
        - In current company setup, it's generally that product/design will come up with the features we are to roll out. Then the requirements/designs will be presented to us once product/design are happy with it. At this point, I may have a disagreement/different idea to solve the problem or an adjustment to the implementation. I would then simply communicate my ideas to them and maybe even mock up in code what it might look like (if its quick enough to do). Generally I find that design/product are very receptive to engineering when they have concerns, so they will definitely listen to you and try to come to a collaborative solution. Result is a level of trust between myself and product/design.

    [] CAN YOU TELL ME ABOUT A TIME WHEN YOU DEALT WITH SCOPE CREEP DURING A SPRINT
        - This can become due to the unknown unknowns nature of software development. One instance I can think of working on development of a feature that was initially thought to only need adjustments to top 2 layers of stack, once in development, we noticed that adjustments to handle certain edge cases would be needed in lower layers of the stack. This creates more work and delay in delivery. This was communicated to Managers and adjustments made, generally as long prior warning is given, company is pretty forgiving with delivery timelines. Result was increased awareness of changes that may need to happen deeper in the stack, and also understanding in adjustment to sprint planning timelines. 

    [] TELL ME ABOUT THE MOST CHALLENGING PROJECT YOU WORKED ON
        - At XXXX my team was seconded to work on the website of the company. Our product managers wanted to move us onto that project to speed up delivery and thought it was important to drive traffic to our products. 
        When we started there, the incumbent custodian team clearly were not ready for the influx of external devs, and progress became difficult. Requirements were sometimes unclear from design as their designers would bicker with our PMs/designers, and the tech team had still not worked out the patterns they wanted to use, nor the DevOps procedures they wanted to use. From our side, we were working on a front-end/CSS heavy project with component development, something no one on our team had done before. 

        Once work started, there were difficulties on our end with completion of tasks as we upskilled in the work/tech of the project. Once we started to be capable of delivery at pace though, it was mostly for naught, as we were largely blocked by their procedures. Only one developer was deemed qualified to review our PRs in the component library, and one other dev for the PRs in the SPA. They were often very busy, and there were times when our PRs would wait for weeks or more before approval. 

        The lessons learned involved: upskilling in CSS/design/component development. An insight into how detrimental to a project the lack of suitable DevOps processes can be. Adding extra developers to the project did not increase speed as we were all bottlenecked behind 1 or 2 developers anyway. 

    [] TELL ME ABOUT A TIME YOU RECIEVED OR GAVE HARSH FEEDBACK
        - 

    [] TELL ME ABOUT A TIME YOU COULDNT DELIVER SOMETHING ON TIME AND HOW DID YOU HANDLE IT?
        -

    [] Tell me about a time when you had to meet a tight deadline for a project. How did you prioritize tasks and ensure the project was completed on time?
        - So we had a feature set that was nearing completion and was scheduled to be delivered to customers at the end of the month (few weeks away), we then got called to a meeting saying that marketing had put out messaging that that feature was going to be delivered on the 15th (next week).

        We weren't expecting to deliver it at that time. So we had to look at the work remaining, what was the state of pending PRs/tickets, and examine the DevOps schedule of the codebases in question (some of the projects are on bi-weekly release schedules, some are daily) to see if it was actually possible to deliver by that date. 

        We determined the last crucial tickets could indeed be completed/reviewed/merged and released to be available to customers by that date, some remaining work/tickets would not be, but they were not customer facing features (some cleanup/optimizations that didn't stop feature release), so could be completed after that date. 

        The end result was indeed that the feature could be released to the customer by the date marketing had promoted. And the remaining work was delivered afterwards. On Reflection we did the best we could in unpredictable circumstances. And delivered the feature in trying circusmtances. 

    [] MY ELEVATOR PITCH/TELL ME ABOUT YOURSELF
        I'm a self-taught software engineer with a passion for problem-solving and creativity. I've found my ideal career in software development, which is not just a job but also my favorite hobby. As an integral member of software delivery teams in a large company, I've honed my skills and become a mentor to junior developers and graduates.

        I consider myself competent across the full web stack, however I am especially passionate about providing intuitive and smooth user workflows in the front end. 